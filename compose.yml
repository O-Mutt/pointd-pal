services:
  # pointd-pal:
  #   container_name: pointd-pal
  #   image: node:lts-slim
  #   working_dir: /app
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   depends_on:
  #     - pointd-pal-db
  #     - migration
  #   command: bash -c "npm ci && npm run start:dev"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  pointd-pal-db:
    container_name: pointd-pal-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=pointdpal
      - POSTGRES_PASSWORD=pointdpal
      - POSTGRES_DB=pointdpal
    ports:
      - 5432:5432
    volumes:
      - pointdpal:/home/postgres/pgdata/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pointdpal"]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    image: flyway/flyway:latest
    volumes:
      - ./migrations/sql/:/flyway/sql
    environment:
      - FLYWAY_URL=jdbc:postgresql://pointd-pal-db:5432/pointdpal
      - FLYWAY_USER=pointdpal
      - FLYWAY_PASSWORD=pointdpal
      - FLYWAY_BASELINE_ON_MIGRATE=true
      - FLYWAY_DEFAULT_SCHEMA=pointdpal
    command: "migrate -X"
    depends_on:
      - pointd-pal-db

  migration-info:
    image: redgate/flyway:latest
    volumes:
      - ./migrations/sql/:/flyway/sql
    environment:
      - FLYWAY_URL=jdbc:postgresql://pointd-pal-db:5432/pointdpal
      - FLYWAY_USER=pointdpal
      - FLYWAY_PASSWORD=pointdpal
      - FLYWAY_BASELINE_ON_MIGRATE=true
    command: "info"
    depends_on:
      pointd-pal-db:
        condition: service_started
      migration:
        condition: service_completed_successfully

volumes:
  pointdpal:
    driver: local
